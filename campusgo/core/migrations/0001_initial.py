# Generated by Django 2.2.10 on 2020-02-26 22:51

import datetime
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
from django.utils.timezone import utc


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailimages', '0001_squashed_0021'),
        ('wagtailcore', '0045_assign_unlock_grouppagepermission'),
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='CampusGoSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fiscal_year_start', models.DateField(default=datetime.datetime(2020, 1, 1, 0, 0, tzinfo=utc), verbose_name='Fiscal year start')),
                ('fiscal_year_end', models.DateField(default=django.utils.timezone.now, verbose_name='Fiscal year end')),
                ('name', models.CharField(blank=True, help_text='Your company name', max_length=255, null=True)),
                ('tagline', models.CharField(blank=True, help_text='Your company tagline', max_length=255, null=True)),
                ('website', models.CharField(blank=True, help_text='Website URL.', max_length=255, null=True)),
                ('sitename', models.CharField(blank=True, help_text='Site name, widely used in this site.', max_length=255, null=True)),
                ('street1', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address 1')),
                ('street2', models.CharField(blank=True, max_length=255, null=True, verbose_name='Address 2')),
                ('city', models.CharField(blank=True, max_length=255, null=True, verbose_name='City')),
                ('province', models.CharField(blank=True, max_length=255, null=True, verbose_name='Province')),
                ('country', models.CharField(blank=True, max_length=255, null=True, verbose_name='Country')),
                ('zipcode', models.CharField(blank=True, max_length=255, null=True, verbose_name='Zip Code')),
                ('phone', models.CharField(blank=True, help_text='Phone number @', max_length=255, null=True)),
                ('fax', models.CharField(blank=True, help_text='Fax number @', max_length=255, null=True)),
                ('email', models.EmailField(blank=True, help_text='Valid email', max_length=255, null=True)),
                ('facebook', models.URLField(blank=True, help_text='Facebook page URL', null=True)),
                ('twitter', models.CharField(blank=True, help_text='twitter username, without the @', max_length=255, null=True)),
                ('instagram', models.CharField(blank=True, help_text='Instagram username, without the @', max_length=255, null=True)),
                ('youtube', models.URLField(blank=True, help_text='YouTube channel or user account URL', null=True)),
                ('user_registration_enabled', models.BooleanField(default=True, help_text='Activate user registration form', verbose_name='User registration enabled')),
                ('auto_create_person', models.BooleanField(default=True, help_text='Create person data for new user created', verbose_name='Auto create person')),
                ('login_with_twitter', models.BooleanField(default=True, help_text='Activate login with Twitter', verbose_name='Login with Twitter')),
                ('login_with_facebook', models.BooleanField(default=True, help_text='Activate login with Facebook', verbose_name='Login with Facebook')),
                ('login_with_google', models.BooleanField(default=True, help_text='Activate login with Google', verbose_name='Login with Google')),
                ('login_with_github', models.BooleanField(default=True, help_text='Activate login with Github', verbose_name='Login with Github')),
                ('login_with_slack', models.BooleanField(default=True, help_text='Activate login with Slack', verbose_name='Login with Slack')),
                ('default_new_user_group', models.ForeignKey(blank=True, help_text='Include new registered user to this group', null=True, on_delete=django.db.models.deletion.SET_NULL, to='auth.Group', verbose_name='Registration default group')),
                ('logo', models.ForeignKey(blank=True, help_text='Your company Logo (square, transparent baground is better)', null=True, on_delete=django.db.models.deletion.SET_NULL, to='wagtailimages.Image', verbose_name='Logo')),
                ('site', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='wagtailcore.Site')),
            ],
            options={
                'verbose_name': 'Campus Go',
                'verbose_name_plural': 'Campus Go',
            },
        ),
    ]
